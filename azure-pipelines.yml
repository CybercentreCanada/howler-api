trigger:
  batch: true
  branches:
    include:
      - main
      - develop
      - rc/*
      - patch/*

pr:
  branches:
    include:
      - main
      - develop
      - rc/*
      - patch/*

variables:
  tag: "$(Build.BuildId)"
  containerRegistry: "uchimera"
  branch: "$(Build.SourceBranchName)"
  repoName: "howler-api"
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isPrBranch: $[eq(variables['Build.SourceBranchName'], 'merge')]
  pythonVersion: "3.9"
  dockerfilePath: "$(Build.SourcesDirectory)/docker/Dockerfile"

pool:
  vmImage: "ubuntu-latest"

resources:
  containers:
    - container: redis
      image: bitnami/redis:7.0.5-debian-11-r7
      ports:
        - 6379:6379
      env:
        ALLOW_EMPTY_PASSWORD: yes
    - container: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:8.5.2
      env:
        ES_JAVA_OPTS: "-Xms256m -Xmx512m"
        discovery.type: "single-node"
        ELASTIC_PASSWORD: "devpass"
        xpack.security.enabled: "false"
      ports:
        - 9200:9200
    - container: minio
      image: bitnami/minio:2022.10.8-debian-11-r0
      env:
        MINIO_ROOT_USER: hwl_storage_key
        MINIO_ROOT_PASSWORD: Ch@ngeTh!sPa33w0rd
      ports:
        - 9000:9000
    - container: keycloak
      image: quay.io/keycloak/keycloak:latest
      ports:
        - 9100:8080

stages:
  - stage: test
    jobs:
      - job: run_test
        strategy:
          matrix:
            python3_9:
              python.version: "3.9"
        timeoutInMinutes: "20"
        services:
          elasticsearch: elasticsearch
          redis: redis
          minio: minio
          keycloak: keycloak

        steps:
          - task: UsePythonVersion@0
            displayName: Set python version
            inputs:
              versionSpec: "3.9"
          - script: |
              sleep 30
            displayName: sleep time (allow ES to be ready)
          - script: |
              sudo mkdir -p /var/cache/howler/
              sudo mkdir -p /var/lib/howler/
              sudo mkdir -p /var/log/howler/
              sudo chmod a+rw /var/cache/howler/
              sudo chmod a+rw /var/lib/howler/
              sudo chmod a+rw /var/log/howler/
              sudo apt-get update
              sudo apt-get install -y build-essential libffi-dev libfuzzy-dev python3-dev libldap2-dev libsasl2-dev wget
            displayName: Setup Environment
            workingDirectory: $(Pipeline.Workspace)/s
          - script: |
              python -m venv venv
              . ./venv/bin/activate
              python -m pip install --upgrade pip
              python -m pip install --no-cache-dir -e .

              python -m pip install --no-cache-dir -r test/requirements.txt
            displayName: Install howler-api
            workingDirectory: $(Pipeline.Workspace)/s
          - script: |
              . ./venv/bin/activate
              python -m howler.app &
              pytest -rsx -vv test
            workingDirectory: $(Pipeline.Workspace)/s
            displayName: Test
