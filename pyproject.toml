##################
# Black settings #
##################
[tool.black]
line-length = 120

########################
# coverage.py settings #
########################
[tool.coverage.run]
omit = [
    "howler/gunicorn_config.py",
    "howler/patched.py",
    "howler/external/*",
    "howler/helper/ws.py",
    "howler/odm/models/*",
    "howler/odm/random_data.py",
]

branch = true
sigterm = true
data_file = ".coverage.server"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if DEBUG:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@(abc\\.)?abstractmethod]",
    "if \"pytest\" in sys.modules:",
]

#################
# Mypy settings #
#################
[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
disable_error_code = "no-redef"
exclude = "test"

[[tool.mypy.overrides]]
module = "howler.odm.models.*"
disable_error_code = "assignment"

[[tool.mypy.overrides]]
module = ["howler.odm.base", "howler.filestore.transport.*", "test", "test.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = "howler.security"
disable_error_code = "attr-defined"

[[tool.mypy.overrides]]
module = "howler.odm.helper"
disable_error_code = "union-attr"

[[tool.mypy.overrides]]
module = "howler.common.classification"
disable_error_code = "assignment"

[[tool.mypy.overrides]]
module = "requests"
ignore_missing_imports = true

###################
# Poetry settings #
###################
[tool.poetry]
package-mode = true
name = "howler-api"
version = "2.1.0"
description = "Howler - API server"
authors = [
    "Canadian Centre for Cyber Security <howler@cyber.gc.ca>",
    "Matthew Rafuse <matthew.rafuse@cyber.gc.ca>",
]
maintainers = ["Matthew Rafuse <matthew.rafuse@cyber.gc.ca>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
]
keywords = [
    "howler",
    "alerting",
    "gc",
    "canada",
    "cse-cst",
    "cse",
    "cst",
    "cyber",
    "cccs",
]
include = [
    { path = "VERSION", format = [
        "sdist",
        "wheel",
    ] },
    { path = "howler/odm/charter.txt", format = [
        "sdist",
        "wheel",
    ] },
]
packages = [{ include = "howler" }]
documentation = "https://cybercentrecanada.github.io/howler-docs/developer/backend/"
homepage = "https://cybercentrecanada.github.io/howler-docs/"
repository = "https://github.com/CybercentreCanada/howler-api"

[tool.poetry.dependencies]
python = "^3.9"
apscheduler = "3.10.4"
authlib = "<1.0.0"
azure-identity = "1.12.0"
azure-storage-blob = "12.14.1"
boto3 = "^1.34.81"
chardet = "5.1.0"
elastic-apm = { extras = ["flask"], version = "^6.22.0" }
elasticsearch = "8.6.1"
flask = "2.2.5"
flask-caching = "2.0.2"
gevent = "23.9.1"
gunicorn = "20.1.0"
netifaces = "0.11.0"
packaging = "22.0"
passlib = "1.7.4"
prometheus-client = "0.17.1"
pyjwt = "2.6.0"
pyroute2-core = "0.6.13"
pysftp = "0.2.9"
pysigma = "0.10.10"
pysigma-backend-elasticsearch = "1.0.9"
python-baseconv = "1.2.2"
python-datemath = "1.5.5"
pyyaml = "6.0"
redis = "4.5.4"
requests = "2.31.0"
wsproto = "1.2.0"
chevron = "0.14.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^7.0.0"
black = "^24.3.0"
pre-commit = "^3.7.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
retrying = "^1.3.4"
pyftpdlib = "^1.5.9"
pyopenssl = "^24.1.0"
mypy = "^1.6.1"
diff-cover = "^8.0.2"
pytest-cov = "^4.1.0"
mock = "^5.1.0"
mypy-extensions = "^1.0.0"
coverage = { extras = ["toml"], version = "^7.4.4" }

[tool.poetry.group.types.dependencies]
types-PyYAML = "6.0.12.12"
types-paramiko = "3.3.0.0"
types-pyOpenSSL = "23.3.0.0"
types-redis = "4.6.0.9"
types-six = "1.16.21.9"
types-requests = "<2.31.0.7"
websocket-client = "1.5.1"

[tool.poetry.scripts]
server = "howler.app:main"
test = "build_scripts.run_tests:main"
type_check = "build_scripts.type_check:main"
mitre = "howler.external.generate_mitre:main"
coverage_report = "build_scripts.coverage_reports:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
